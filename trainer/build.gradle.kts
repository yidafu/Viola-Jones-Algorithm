/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.5/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    alias(libs.plugins.jvm)

    // Apply the application plugin to create an executable JAR
    application
}

repositories {
    maven("https://packages.jetbrains.team/maven/p/kds/kotlin-ds-maven")

    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api(libs.commons.math3)

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation(libs.guava)
    implementation(libs.kmath.core)
    implementation(libs.multik.core)
    implementation(libs.multik.default)
    implementation(project(":shared"))
    implementation(libs.kandy.lets.plot)
    implementation(libs.dataframe)
    implementation(libs.kotlin.statistics)
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.10.2")

}

testing {
    suites {
        // Configure the built-in test suite
        val test by getting(JvmTestSuite::class) {
            // Use Kotlin Test test framework
//            useKotlinTest("2.2.20")
        }
    }
}

// Configure the application
application {
    // Define the main class for the application.
    mainClass.set("dev.yidafu.face.detection.MainKt")
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}
